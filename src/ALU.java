/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import javax.swing.text.*;
import javax.swing.text.DocumentFilter.*;
/**
 *
 * @author Chawp
 */
public class ALU extends javax.swing.JFrame {

    /**
     * Creates new form ALU
     */
    public ALU() {
        initComponents();
        // <editor-fold defaultstate="collapsed" desc="Set Window Size">  
        this.setSize(1140,1040);
        this.setTitle("Dylan's Godlike ALU");

        ((javax.swing.text.AbstractDocument) input.getDocument()).setDocumentFilter(new MyDocumentFilter());
        // </editor-fold>
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        operation = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        input = new javax.swing.JTextPane();
        resetSet = new javax.swing.JCheckBox();
        addSet = new javax.swing.JCheckBox();
        multSet = new javax.swing.JCheckBox();
        andSet = new javax.swing.JCheckBox();
        subSet = new javax.swing.JCheckBox();
        orSet = new javax.swing.JCheckBox();
        xorSet = new javax.swing.JCheckBox();
        notSet = new javax.swing.JCheckBox();
        loadSet = new javax.swing.JCheckBox();
        reset2Set = new javax.swing.JCheckBox();
        onSet = new javax.swing.JCheckBox();
        offSet = new javax.swing.JCheckBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        output = new javax.swing.JTextPane();
        inputLabel = new javax.swing.JLabel();
        outputLabel = new javax.swing.JLabel();
        goButton = new javax.swing.JButton();
        addLabel = new javax.swing.JLabel();
        subLabel = new javax.swing.JLabel();
        onLabel = new javax.swing.JLabel();
        andLabel = new javax.swing.JLabel();
        orLabel = new javax.swing.JLabel();
        xorLabel = new javax.swing.JLabel();
        notLabel = new javax.swing.JLabel();
        loadLabel = new javax.swing.JLabel();
        nothingLabel = new javax.swing.JLabel();
        multLabel = new javax.swing.JLabel();
        resetLabel1 = new javax.swing.JLabel();
        offLabel = new javax.swing.JLabel();
        clockLabel2 = new javax.swing.JLabel();
        clockLabel = new javax.swing.JLabel();
        FF1Label = new javax.swing.JLabel();
        FF1output = new javax.swing.JTextField();
        FF2Label = new javax.swing.JLabel();
        FF2Output = new javax.swing.JTextField();
        BackgroundImage = new javax.swing.JLabel();

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        input.setAutoscrolls(false);
        jScrollPane1.setViewportView(input);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(20, 180, 130, 30);

        resetSet.setText("RST");
        resetSet.setToolTipText("");
        resetSet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetSetActionPerformed(evt);
            }
        });
        getContentPane().add(resetSet);
        resetSet.setBounds(360, 500, 60, 23);

        addSet.setText("ADD");
        addSet.setToolTipText("");
        getContentPane().add(addSet);
        addSet.setBounds(360, 540, 47, 23);

        multSet.setText("MULT");
        multSet.setToolTipText("");
        getContentPane().add(multSet);
        multSet.setBounds(360, 520, 60, 23);

        andSet.setText("AND");
        andSet.setToolTipText("");
        getContentPane().add(andSet);
        andSet.setBounds(360, 580, 47, 23);

        subSet.setText("SUB");
        subSet.setToolTipText("");
        getContentPane().add(subSet);
        subSet.setBounds(360, 560, 50, 23);

        orSet.setText("OR");
        orSet.setToolTipText("");
        getContentPane().add(orSet);
        orSet.setBounds(360, 600, 41, 23);

        xorSet.setText("XOR");
        xorSet.setToolTipText("");
        getContentPane().add(xorSet);
        xorSet.setBounds(360, 620, 47, 23);

        notSet.setText("NOT");
        notSet.setToolTipText("");
        getContentPane().add(notSet);
        notSet.setBounds(360, 640, 47, 23);

        loadSet.setText("LOAD");
        loadSet.setToolTipText("");
        getContentPane().add(loadSet);
        loadSet.setBounds(360, 660, 60, 23);

        reset2Set.setText("RST");
        reset2Set.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reset2SetActionPerformed(evt);
            }
        });
        getContentPane().add(reset2Set);
        reset2Set.setBounds(90, 920, 60, 23);

        onSet.setText("ON");
        getContentPane().add(onSet);
        onSet.setBounds(90, 940, 60, 23);

        offSet.setText("OFF");
        getContentPane().add(offSet);
        offSet.setBounds(90, 960, 45, 23);

        output.setEditable(false);
        output.setAutoscrolls(false);
        jScrollPane2.setViewportView(output);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(950, 160, 137, 33);

        inputLabel.setText("Input");
        getContentPane().add(inputLabel);
        inputLabel.setBounds(30, 160, 40, 14);

        outputLabel.setText("Output");
        getContentPane().add(outputLabel);
        outputLabel.setBounds(960, 140, 40, 14);

        goButton.setText("I'M READY");
        getContentPane().add(goButton);
        goButton.setBounds(40, 230, 90, 23);

        addLabel.setText("ADD");
        getContentPane().add(addLabel);
        addLabel.setBounds(330, 150, 70, 20);

        subLabel.setText("SUB");
        getContentPane().add(subLabel);
        subLabel.setBounds(330, 190, 70, 20);

        onLabel.setText("1");
        getContentPane().add(onLabel);
        onLabel.setBounds(80, 770, 30, 30);

        andLabel.setText("AND");
        getContentPane().add(andLabel);
        andLabel.setBounds(330, 220, 70, 30);

        orLabel.setText("OR");
        getContentPane().add(orLabel);
        orLabel.setBounds(330, 260, 70, 20);

        xorLabel.setText("XOR");
        getContentPane().add(xorLabel);
        xorLabel.setBounds(330, 300, 70, 20);

        notLabel.setText("NOT");
        getContentPane().add(notLabel);
        notLabel.setBounds(330, 330, 70, 30);

        loadLabel.setText("LOAD");
        getContentPane().add(loadLabel);
        loadLabel.setBounds(330, 370, 70, 20);

        nothingLabel.setText("Do Nothing");
        getContentPane().add(nothingLabel);
        nothingLabel.setBounds(320, 400, 90, 40);

        multLabel.setText("MULT");
        getContentPane().add(multLabel);
        multLabel.setBounds(330, 110, 70, 30);

        resetLabel1.setText("0");
        getContentPane().add(resetLabel1);
        resetLabel1.setBounds(340, 80, 70, 20);

        offLabel.setText("0");
        getContentPane().add(offLabel);
        offLabel.setBounds(80, 840, 30, 20);

        clockLabel2.setText("Clock");
        getContentPane().add(clockLabel2);
        clockLabel2.setBounds(300, 910, 34, 14);

        clockLabel.setText("Clock");
        getContentPane().add(clockLabel);
        clockLabel.setBounds(650, 300, 34, 14);

        FF1Label.setText("FF1");
        getContentPane().add(FF1Label);
        FF1Label.setBounds(300, 760, 30, 20);

        FF1output.setEditable(false);
        FF1output.setText("XX");
        getContentPane().add(FF1output);
        FF1output.setBounds(270, 800, 80, 20);

        FF2Label.setText("FF2");
        getContentPane().add(FF2Label);
        FF2Label.setBounds(650, 150, 34, 14);

        FF2Output.setText("XX");
        getContentPane().add(FF2Output);
        FF2Output.setBounds(620, 190, 80, 20);

        BackgroundImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/ALU temp.png"))); // NOI18N
        getContentPane().add(BackgroundImage);
        BackgroundImage.setBounds(0, 0, 1145, 1000);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void resetSetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetSetActionPerformed
        //reset is the same input wire, so if one is set the other is too
        if(resetSet.isSelected())
            reset2Set.setSelected(true);
        else if(!resetSet.isSelected())
            reset2Set.setSelected(false);
    }//GEN-LAST:event_resetSetActionPerformed

    private void reset2SetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reset2SetActionPerformed
        //reset is the same input wire, so if one is set the other is too
        if(reset2Set.isSelected())
            resetSet.setSelected(true);
        else if(!reset2Set.isSelected())
            resetSet.setSelected(false);
    }//GEN-LAST:event_reset2SetActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ALU.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ALU.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ALU.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ALU.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ALU().setVisible(true);
            }
        });
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel BackgroundImage;
    private javax.swing.JLabel FF1Label;
    private javax.swing.JTextField FF1output;
    private javax.swing.JLabel FF2Label;
    private javax.swing.JTextField FF2Output;
    private javax.swing.JLabel addLabel;
    private javax.swing.JCheckBox addSet;
    private javax.swing.JLabel andLabel;
    private javax.swing.JCheckBox andSet;
    private javax.swing.JLabel clockLabel;
    private javax.swing.JLabel clockLabel2;
    private javax.swing.JButton goButton;
    private javax.swing.JTextPane input;
    private javax.swing.JLabel inputLabel;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel loadLabel;
    private javax.swing.JCheckBox loadSet;
    private javax.swing.JLabel multLabel;
    private javax.swing.JCheckBox multSet;
    private javax.swing.JLabel notLabel;
    private javax.swing.JCheckBox notSet;
    private javax.swing.JLabel nothingLabel;
    private javax.swing.JLabel offLabel;
    private javax.swing.JCheckBox offSet;
    private javax.swing.JLabel onLabel;
    private javax.swing.JCheckBox onSet;
    private javax.swing.ButtonGroup operation;
    private javax.swing.JLabel orLabel;
    private javax.swing.JCheckBox orSet;
    private javax.swing.JTextPane output;
    private javax.swing.JLabel outputLabel;
    private javax.swing.JCheckBox reset2Set;
    private javax.swing.JLabel resetLabel1;
    private javax.swing.JCheckBox resetSet;
    private javax.swing.JLabel subLabel;
    private javax.swing.JCheckBox subSet;
    private javax.swing.JLabel xorLabel;
    private javax.swing.JCheckBox xorSet;
    // End of variables declaration//GEN-END:variables
    class MyDocumentFilter extends javax.swing.text.DocumentFilter
    {
        public void replace(DocumentFilter.FilterBypass fb, int offset, int length, String text,
        AttributeSet attrs) throws BadLocationException 
        {
            System.out.println("replace: " + text);
            if(text.length() == 1)
            {
                if(text.charAt(0) == '1' || text.charAt(0) == '0')
                {
                    System.out.println("IN THE IF");
                    super.replace(fb, offset, length, text, attrs);
                }
                else{
                    System.out.println("IN THE ELLSE");
                    super.replace(fb, offset, length, "", attrs);
                }
            }
            else{
                boolean juan = true;
                for (int i = 0; i < text.length(); i++){
                    char c = text.charAt(i);
                    if(c != '0' && c != '1')
                    {
                        juan = false;
                        break;
                    }
                }
                if(juan){
                    System.out.println("JUAN");
                    super.replace(fb, offset, length, text, attrs);}
                else{
                    System.out.println("NO JUAN");
                    super.replace(fb, offset, length, "", attrs);
                }
            }
        }
    }
}
